Terminals unused in grammar

   T_UInt
   T_Dims
   T_Struct
   T_In
   T_Out
   T_InOut
   T_Const
   T_Uniform
   T_Layout
   T_Break
   T_Continue
   T_Do
   T_Return


Rules useless in parser due to conflicts

  105 Switch_Stmt_List: Stmt_List


State 27 conflicts: 28 shift/reduce
State 55 conflicts: 28 shift/reduce
State 82 conflicts: 28 shift/reduce
State 101 conflicts: 28 shift/reduce
State 152 conflicts: 27 shift/reduce
State 154 conflicts: 27 shift/reduce
State 161 conflicts: 1 shift/reduce
State 165 conflicts: 27 shift/reduce
State 167 conflicts: 27 shift/reduce
State 169 conflicts: 27 shift/reduce
State 170 conflicts: 27 shift/reduce, 1 reduce/reduce
State 173 conflicts: 27 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Trans_Unit

    2 Var_Ident: T_Identifier

    3 Pri_Expr: Var_Ident
    4         | T_IntConstant
    5         | T_FloatConstant
    6         | T_BoolConstant
    7         | '(' Expr ')'

    8 Pst_Expr: Pri_Expr
    9         | Pst_Expr '.' T_FieldSelection
   10         | Pst_Expr T_Inc
   11         | Pst_Expr T_Dec

   12 Unary_Expr: Pst_Expr
   13           | T_Inc Unary_Expr
   14           | T_Dec Unary_Expr
   15           | Unary_Op Unary_Expr

   16 Unary_Op: '+'
   17         | '-'

   18 Mult_Expr: Unary_Expr
   19          | Mult_Expr '*' Unary_Expr
   20          | Mult_Expr '/' Unary_Expr

   21 Add_Expr: Mult_Expr
   22         | Add_Expr '+' Mult_Expr
   23         | Add_Expr '-' Mult_Expr

   24 Shift_Expr: Add_Expr

   25 Rel_Expr: Shift_Expr
   26         | Rel_Expr '<' Shift_Expr
   27         | Rel_Expr '>' Shift_Expr
   28         | Rel_Expr T_LessEqual Shift_Expr
   29         | Rel_Expr T_GreaterEqual Shift_Expr

   30 Eq_Expr: Rel_Expr
   31        | Eq_Expr T_Equal Rel_Expr
   32        | Eq_Expr T_NotEqual Rel_Expr

   33 And_Expr: Eq_Expr

   34 Xor_Expr: And_Expr

   35 Inc_Or_Expr: Xor_Expr

   36 Log_And_Expr: Inc_Or_Expr
   37             | Log_And_Expr T_And Inc_Or_Expr

   38 Log_Xor_Expr: Log_And_Expr

   39 Log_Or_Expr: Log_Xor_Expr
   40            | Log_Or_Expr T_Or Log_Xor_Expr

   41 Cond_Expr: Log_Or_Expr

   42 Assign_Expr: Cond_Expr
   43            | Unary_Expr Assign_Op Assign_Expr

   44 Assign_Op: '='
   45          | T_Mul_Assign
   46          | T_Div_Assign
   47          | T_Add_Assign
   48          | T_Sub_Assign

   49 Expr: Assign_Expr

   50 Decl: Func_Proto ';'
   51     | Init_Decl_List ';'

   52 Func_Proto: Func_Declr ')'

   53 Func_Declr: Func_Hdr
   54           | Func_Hdr_With_Param

   55 Func_Hdr_With_Param: Func_Hdr Param_Decl
   56                    | Func_Hdr_With_Param ',' Param_Decl

   57 Func_Hdr: Fully_Spec_Type Identifier '('

   58 Identifier: T_Identifier

   59 Param_Declr: Type_Spec T_Identifier

   60 Param_Decl: Param_Declr
   61           | Param_Type_Spec

   62 Param_Type_Spec: Type_Spec

   63 Init_Decl_List: Single_Decl

   64 Single_Decl: Fully_Spec_Type T_Identifier

   65 Fully_Spec_Type: Type_Spec

   66 Type_Spec: Type_Spec_Nonarr

   67 Type_Spec_Nonarr: T_Void
   68                 | T_Float
   69                 | T_Int
   70                 | T_Bool
   71                 | T_Vec2
   72                 | T_Vec3
   73                 | T_Vec4
   74                 | T_Mat2
   75                 | T_Mat3
   76                 | T_Mat4

   77 Decl_Stmt: Decl

   78 Stmt: Compd_Stmt_With_Scope
   79     | Simple_Stmt

   80 Stmt_No_New_Scope: Compd_Stmt_No_New_Scope
   81                  | Simple_Stmt

   82 Stmt_With_Scope: Compd_Stmt_No_New_Scope
   83                | Simple_Stmt

   84 Simple_Stmt: Decl_Stmt
   85            | Expr_Stmt
   86            | Select_Stmt
   87            | Switch_Stmt
   88            | Case_Label
   89            | Iter_Stmt

   90 Compd_Stmt_With_Scope: '{' '}'
   91                      | '{' Stmt_List '}'

   92 Compd_Stmt_No_New_Scope: '{' '}'
   93                        | '{' Stmt_List '}'

   94 Stmt_List: Stmt
   95          | Stmt_List Stmt

   96 Expr_Stmt: ';'
   97          | Expr ';'

   98 Select_Stmt: T_If '(' Expr ')' Select_Rest_Stmt

   99 Select_Rest_Stmt: Stmt_With_Scope T_Else Stmt_With_Scope
  100                 | Stmt_With_Scope

  101 Cond: Expr
  102     | Type_Spec T_Identifier T_Equal Assign_Expr

  103 Switch_Stmt: /* empty */
  104            | T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'

  105 Switch_Stmt_List: Stmt_List

  106 Case_Label: T_Case Expr ':'
  107           | T_Default ':'

  108 Iter_Stmt: T_While '(' Cond ')' Stmt_No_New_Scope
  109          | T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

  111 Trans_Unit: Trans_Unit Ext_Decl
  112           | Ext_Decl

  113 Ext_Decl: Func_Def
  114         | Decl

  115 Func_Def: Func_Proto Compd_Stmt_No_New_Scope


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 57 98 104 108 109 110
')' (41) 7 52 98 104 108 109 110
'*' (42) 19
'+' (43) 16 22
',' (44) 56
'-' (45) 17 23
'.' (46) 9
'/' (47) 20
':' (58) 106 107
';' (59) 50 51 96 97 109 110
'<' (60) 26
'=' (61) 44
'>' (62) 27
'{' (123) 90 91 92 93 104
'}' (125) 90 91 92 93 104
error (256)
T_Void (258) 67
T_Bool (259) 70
T_Float (260) 68
T_Int (261) 69
T_UInt (262)
T_Vec2 (263) 71
T_Vec3 (264) 72
T_Vec4 (265) 73
T_Dims (266)
T_Mat2 (267) 74
T_Mat3 (268) 75
T_Mat4 (269) 76
T_Struct (270)
T_In (271)
T_Out (272)
T_InOut (273)
T_Const (274)
T_Uniform (275)
T_Layout (276)
T_And (277) 37
T_Or (278) 40
T_While (279) 108
T_Break (280)
T_Continue (281)
T_Do (282)
T_Else (283) 99
T_For (284) 109 110
T_If (285) 98
T_Return (286)
T_Switch (287) 104
T_Case (288) 106
T_Default (289) 107
T_IntConstant (290) 4
T_FloatConstant (291) 5
T_BoolConstant (292) 6
T_Inc (293) 10 13
T_Dec (294) 11 14
T_LessEqual (295) 28
T_GreaterEqual (296) 29
T_Equal (297) 31 102
T_NotEqual (298) 32
T_Mul_Assign (299) 45
T_Div_Assign (300) 46
T_Add_Assign (301) 47
T_Sub_Assign (302) 48
T_FieldSelection (303) 9
T_Identifier (304) 2 58 59 64 102


Nonterminals, with rules where they appear

$accept (65)
    on left: 0
Program (66)
    on left: 1, on right: 0
Var_Ident (67)
    on left: 2, on right: 3
Pri_Expr (68)
    on left: 3 4 5 6 7, on right: 8
Pst_Expr (69)
    on left: 8 9 10 11, on right: 9 10 11 12
Unary_Expr (70)
    on left: 12 13 14 15, on right: 13 14 15 18 19 20 43
Unary_Op (71)
    on left: 16 17, on right: 15
Mult_Expr (72)
    on left: 18 19 20, on right: 19 20 21 22 23
Add_Expr (73)
    on left: 21 22 23, on right: 22 23 24
Shift_Expr (74)
    on left: 24, on right: 25 26 27 28 29
Rel_Expr (75)
    on left: 25 26 27 28 29, on right: 26 27 28 29 30 31 32
Eq_Expr (76)
    on left: 30 31 32, on right: 31 32 33
And_Expr (77)
    on left: 33, on right: 34
Xor_Expr (78)
    on left: 34, on right: 35
Inc_Or_Expr (79)
    on left: 35, on right: 36 37
Log_And_Expr (80)
    on left: 36 37, on right: 37 38
Log_Xor_Expr (81)
    on left: 38, on right: 39 40
Log_Or_Expr (82)
    on left: 39 40, on right: 40 41
Cond_Expr (83)
    on left: 41, on right: 42
Assign_Expr (84)
    on left: 42 43, on right: 43 49 102
Assign_Op (85)
    on left: 44 45 46 47 48, on right: 43
Expr (86)
    on left: 49, on right: 7 97 98 101 104 106 110
Decl (87)
    on left: 50 51, on right: 77 114
Func_Proto (88)
    on left: 52, on right: 50 115
Func_Declr (89)
    on left: 53 54, on right: 52
Func_Hdr_With_Param (90)
    on left: 55 56, on right: 54 56
Func_Hdr (91)
    on left: 57, on right: 53 55
Identifier (92)
    on left: 58, on right: 57
Param_Declr (93)
    on left: 59, on right: 60
Param_Decl (94)
    on left: 60 61, on right: 55 56
Param_Type_Spec (95)
    on left: 62, on right: 61
Init_Decl_List (96)
    on left: 63, on right: 51
Single_Decl (97)
    on left: 64, on right: 63
Fully_Spec_Type (98)
    on left: 65, on right: 57 64
Type_Spec (99)
    on left: 66, on right: 59 62 65 102
Type_Spec_Nonarr (100)
    on left: 67 68 69 70 71 72 73 74 75 76, on right: 66
Decl_Stmt (101)
    on left: 77, on right: 84
Stmt (102)
    on left: 78 79, on right: 94 95
Stmt_No_New_Scope (103)
    on left: 80 81, on right: 108 109 110
Stmt_With_Scope (104)
    on left: 82 83, on right: 99 100
Simple_Stmt (105)
    on left: 84 85 86 87 88 89, on right: 79 81 83
Compd_Stmt_With_Scope (106)
    on left: 90 91, on right: 78
Compd_Stmt_No_New_Scope (107)
    on left: 92 93, on right: 80 82 115
Stmt_List (108)
    on left: 94 95, on right: 91 93 95 105
Expr_Stmt (109)
    on left: 96 97, on right: 85 109 110
Select_Stmt (110)
    on left: 98, on right: 86
Select_Rest_Stmt (111)
    on left: 99 100, on right: 98
Cond (112)
    on left: 101 102, on right: 108 109 110
Switch_Stmt (113)
    on left: 103 104, on right: 87
Switch_Stmt_List (114)
    on left: 105, on right: 104
Case_Label (115)
    on left: 106 107, on right: 88
Iter_Stmt (116)
    on left: 108 109 110, on right: 89
Trans_Unit (117)
    on left: 111 112, on right: 1 111
Ext_Decl (118)
    on left: 113 114, on right: 111 112
Func_Def (119)
    on left: 115, on right: 113


state 0

    0 $accept: . Program $end
    1 Program: . Trans_Unit
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
  111 Trans_Unit: . Trans_Unit Ext_Decl
  112           | . Ext_Decl
  113 Ext_Decl: . Func_Def
  114         | . Decl
  115 Func_Def: . Func_Proto Compd_Stmt_No_New_Scope

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Float  shift, and go to state 3
    T_Int    shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    Program              go to state 11
    Decl                 go to state 12
    Func_Proto           go to state 13
    Func_Declr           go to state 14
    Func_Hdr_With_Param  go to state 15
    Func_Hdr             go to state 16
    Init_Decl_List       go to state 17
    Single_Decl          go to state 18
    Fully_Spec_Type      go to state 19
    Type_Spec            go to state 20
    Type_Spec_Nonarr     go to state 21
    Trans_Unit           go to state 22
    Ext_Decl             go to state 23
    Func_Def             go to state 24


state 1

   67 Type_Spec_Nonarr: T_Void .

    $default  reduce using rule 67 (Type_Spec_Nonarr)


state 2

   70 Type_Spec_Nonarr: T_Bool .

    $default  reduce using rule 70 (Type_Spec_Nonarr)


state 3

   68 Type_Spec_Nonarr: T_Float .

    $default  reduce using rule 68 (Type_Spec_Nonarr)


state 4

   69 Type_Spec_Nonarr: T_Int .

    $default  reduce using rule 69 (Type_Spec_Nonarr)


state 5

   71 Type_Spec_Nonarr: T_Vec2 .

    $default  reduce using rule 71 (Type_Spec_Nonarr)


state 6

   72 Type_Spec_Nonarr: T_Vec3 .

    $default  reduce using rule 72 (Type_Spec_Nonarr)


state 7

   73 Type_Spec_Nonarr: T_Vec4 .

    $default  reduce using rule 73 (Type_Spec_Nonarr)


state 8

   74 Type_Spec_Nonarr: T_Mat2 .

    $default  reduce using rule 74 (Type_Spec_Nonarr)


state 9

   75 Type_Spec_Nonarr: T_Mat3 .

    $default  reduce using rule 75 (Type_Spec_Nonarr)


state 10

   76 Type_Spec_Nonarr: T_Mat4 .

    $default  reduce using rule 76 (Type_Spec_Nonarr)


state 11

    0 $accept: Program . $end

    $end  shift, and go to state 25


state 12

  114 Ext_Decl: Decl .

    $default  reduce using rule 114 (Ext_Decl)


state 13

   50 Decl: Func_Proto . ';'
   92 Compd_Stmt_No_New_Scope: . '{' '}'
   93                        | . '{' Stmt_List '}'
  115 Func_Def: Func_Proto . Compd_Stmt_No_New_Scope

    ';'  shift, and go to state 26
    '{'  shift, and go to state 27

    Compd_Stmt_No_New_Scope  go to state 28


state 14

   52 Func_Proto: Func_Declr . ')'

    ')'  shift, and go to state 29


state 15

   54 Func_Declr: Func_Hdr_With_Param .  [')']
   56 Func_Hdr_With_Param: Func_Hdr_With_Param . ',' Param_Decl

    ','  shift, and go to state 30

    $default  reduce using rule 54 (Func_Declr)


state 16

   53 Func_Declr: Func_Hdr .  [')']
   55 Func_Hdr_With_Param: Func_Hdr . Param_Decl
   59 Param_Declr: . Type_Spec T_Identifier
   60 Param_Decl: . Param_Declr
   61           | . Param_Type_Spec
   62 Param_Type_Spec: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Float  shift, and go to state 3
    T_Int    shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    $default  reduce using rule 53 (Func_Declr)

    Param_Declr       go to state 31
    Param_Decl        go to state 32
    Param_Type_Spec   go to state 33
    Type_Spec         go to state 34
    Type_Spec_Nonarr  go to state 21


state 17

   51 Decl: Init_Decl_List . ';'

    ';'  shift, and go to state 35


state 18

   63 Init_Decl_List: Single_Decl .

    $default  reduce using rule 63 (Init_Decl_List)


state 19

   57 Func_Hdr: Fully_Spec_Type . Identifier '('
   58 Identifier: . T_Identifier
   64 Single_Decl: Fully_Spec_Type . T_Identifier

    T_Identifier  shift, and go to state 36

    Identifier  go to state 37


state 20

   65 Fully_Spec_Type: Type_Spec .

    $default  reduce using rule 65 (Fully_Spec_Type)


state 21

   66 Type_Spec: Type_Spec_Nonarr .

    $default  reduce using rule 66 (Type_Spec)


state 22

    1 Program: Trans_Unit .  [$end]
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
  111 Trans_Unit: Trans_Unit . Ext_Decl
  113 Ext_Decl: . Func_Def
  114         | . Decl
  115 Func_Def: . Func_Proto Compd_Stmt_No_New_Scope

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Float  shift, and go to state 3
    T_Int    shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    $default  reduce using rule 1 (Program)

    Decl                 go to state 12
    Func_Proto           go to state 13
    Func_Declr           go to state 14
    Func_Hdr_With_Param  go to state 15
    Func_Hdr             go to state 16
    Init_Decl_List       go to state 17
    Single_Decl          go to state 18
    Fully_Spec_Type      go to state 19
    Type_Spec            go to state 20
    Type_Spec_Nonarr     go to state 21
    Ext_Decl             go to state 38
    Func_Def             go to state 24


state 23

  112 Trans_Unit: Ext_Decl .

    $default  reduce using rule 112 (Trans_Unit)


state 24

  113 Ext_Decl: Func_Def .

    $default  reduce using rule 113 (Ext_Decl)


state 25

    0 $accept: Program $end .

    $default  accept


state 26

   50 Decl: Func_Proto ';' .

    $default  reduce using rule 50 (Decl)


state 27

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   78 Stmt: . Compd_Stmt_With_Scope
   79     | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   90 Compd_Stmt_With_Scope: . '{' '}'
   91                      | . '{' Stmt_List '}'
   92 Compd_Stmt_No_New_Scope: '{' . '}'
   93                        | '{' . Stmt_List '}'
   94 Stmt_List: . Stmt
   95          | . Stmt_List Stmt
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 55
    '}'              shift, and go to state 56

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    '}'              [reduce using rule 103 (Switch_Stmt)]

    Var_Ident              go to state 57
    Pri_Expr               go to state 58
    Pst_Expr               go to state 59
    Unary_Expr             go to state 60
    Unary_Op               go to state 61
    Mult_Expr              go to state 62
    Add_Expr               go to state 63
    Shift_Expr             go to state 64
    Rel_Expr               go to state 65
    Eq_Expr                go to state 66
    And_Expr               go to state 67
    Xor_Expr               go to state 68
    Inc_Or_Expr            go to state 69
    Log_And_Expr           go to state 70
    Log_Xor_Expr           go to state 71
    Log_Or_Expr            go to state 72
    Cond_Expr              go to state 73
    Assign_Expr            go to state 74
    Expr                   go to state 75
    Decl                   go to state 76
    Func_Proto             go to state 77
    Func_Declr             go to state 14
    Func_Hdr_With_Param    go to state 15
    Func_Hdr               go to state 16
    Init_Decl_List         go to state 17
    Single_Decl            go to state 18
    Fully_Spec_Type        go to state 19
    Type_Spec              go to state 20
    Type_Spec_Nonarr       go to state 21
    Decl_Stmt              go to state 78
    Stmt                   go to state 79
    Simple_Stmt            go to state 80
    Compd_Stmt_With_Scope  go to state 81
    Stmt_List              go to state 82
    Expr_Stmt              go to state 83
    Select_Stmt            go to state 84
    Switch_Stmt            go to state 85
    Case_Label             go to state 86
    Iter_Stmt              go to state 87


state 28

  115 Func_Def: Func_Proto Compd_Stmt_No_New_Scope .

    $default  reduce using rule 115 (Func_Def)


state 29

   52 Func_Proto: Func_Declr ')' .

    $default  reduce using rule 52 (Func_Proto)


state 30

   56 Func_Hdr_With_Param: Func_Hdr_With_Param ',' . Param_Decl
   59 Param_Declr: . Type_Spec T_Identifier
   60 Param_Decl: . Param_Declr
   61           | . Param_Type_Spec
   62 Param_Type_Spec: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4

    T_Void   shift, and go to state 1
    T_Bool   shift, and go to state 2
    T_Float  shift, and go to state 3
    T_Int    shift, and go to state 4
    T_Vec2   shift, and go to state 5
    T_Vec3   shift, and go to state 6
    T_Vec4   shift, and go to state 7
    T_Mat2   shift, and go to state 8
    T_Mat3   shift, and go to state 9
    T_Mat4   shift, and go to state 10

    Param_Declr       go to state 31
    Param_Decl        go to state 88
    Param_Type_Spec   go to state 33
    Type_Spec         go to state 34
    Type_Spec_Nonarr  go to state 21


state 31

   60 Param_Decl: Param_Declr .

    $default  reduce using rule 60 (Param_Decl)


state 32

   55 Func_Hdr_With_Param: Func_Hdr Param_Decl .

    $default  reduce using rule 55 (Func_Hdr_With_Param)


state 33

   61 Param_Decl: Param_Type_Spec .

    $default  reduce using rule 61 (Param_Decl)


state 34

   59 Param_Declr: Type_Spec . T_Identifier
   62 Param_Type_Spec: Type_Spec .  [')', ',']

    T_Identifier  shift, and go to state 89

    $default  reduce using rule 62 (Param_Type_Spec)


state 35

   51 Decl: Init_Decl_List ';' .

    $default  reduce using rule 51 (Decl)


state 36

   58 Identifier: T_Identifier .  ['(']
   64 Single_Decl: Fully_Spec_Type T_Identifier .  [';']

    ';'       reduce using rule 64 (Single_Decl)
    $default  reduce using rule 58 (Identifier)


state 37

   57 Func_Hdr: Fully_Spec_Type Identifier . '('

    '('  shift, and go to state 90


state 38

  111 Trans_Unit: Trans_Unit Ext_Decl .

    $default  reduce using rule 111 (Trans_Unit)


state 39

  108 Iter_Stmt: T_While . '(' Cond ')' Stmt_No_New_Scope

    '('  shift, and go to state 91


state 40

  109 Iter_Stmt: T_For . '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | T_For . '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    '('  shift, and go to state 92


state 41

   98 Select_Stmt: T_If . '(' Expr ')' Select_Rest_Stmt

    '('  shift, and go to state 93


state 42

  104 Switch_Stmt: T_Switch . '(' Expr ')' '{' Switch_Stmt_List '}'

    '('  shift, and go to state 94


state 43

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
  106 Case_Label: T_Case . Expr ':'

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 74
    Expr          go to state 95


state 44

  107 Case_Label: T_Default . ':'

    ':'  shift, and go to state 96


state 45

    4 Pri_Expr: T_IntConstant .

    $default  reduce using rule 4 (Pri_Expr)


state 46

    5 Pri_Expr: T_FloatConstant .

    $default  reduce using rule 5 (Pri_Expr)


state 47

    6 Pri_Expr: T_BoolConstant .

    $default  reduce using rule 6 (Pri_Expr)


state 48

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   13           | T_Inc . Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 97
    Unary_Op    go to state 61


state 49

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   14           | T_Dec . Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 98
    Unary_Op    go to state 61


state 50

    2 Var_Ident: T_Identifier .

    $default  reduce using rule 2 (Var_Ident)


state 51

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    7         | '(' . Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 74
    Expr          go to state 99


state 52

   16 Unary_Op: '+' .

    $default  reduce using rule 16 (Unary_Op)


state 53

   17 Unary_Op: '-' .

    $default  reduce using rule 17 (Unary_Op)


state 54

   96 Expr_Stmt: ';' .

    $default  reduce using rule 96 (Expr_Stmt)


state 55

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   78 Stmt: . Compd_Stmt_With_Scope
   79     | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   90 Compd_Stmt_With_Scope: . '{' '}'
   90                      | '{' . '}'
   91                      | . '{' Stmt_List '}'
   91                      | '{' . Stmt_List '}'
   94 Stmt_List: . Stmt
   95          | . Stmt_List Stmt
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 55
    '}'              shift, and go to state 100

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    '}'              [reduce using rule 103 (Switch_Stmt)]

    Var_Ident              go to state 57
    Pri_Expr               go to state 58
    Pst_Expr               go to state 59
    Unary_Expr             go to state 60
    Unary_Op               go to state 61
    Mult_Expr              go to state 62
    Add_Expr               go to state 63
    Shift_Expr             go to state 64
    Rel_Expr               go to state 65
    Eq_Expr                go to state 66
    And_Expr               go to state 67
    Xor_Expr               go to state 68
    Inc_Or_Expr            go to state 69
    Log_And_Expr           go to state 70
    Log_Xor_Expr           go to state 71
    Log_Or_Expr            go to state 72
    Cond_Expr              go to state 73
    Assign_Expr            go to state 74
    Expr                   go to state 75
    Decl                   go to state 76
    Func_Proto             go to state 77
    Func_Declr             go to state 14
    Func_Hdr_With_Param    go to state 15
    Func_Hdr               go to state 16
    Init_Decl_List         go to state 17
    Single_Decl            go to state 18
    Fully_Spec_Type        go to state 19
    Type_Spec              go to state 20
    Type_Spec_Nonarr       go to state 21
    Decl_Stmt              go to state 78
    Stmt                   go to state 79
    Simple_Stmt            go to state 80
    Compd_Stmt_With_Scope  go to state 81
    Stmt_List              go to state 101
    Expr_Stmt              go to state 83
    Select_Stmt            go to state 84
    Switch_Stmt            go to state 85
    Case_Label             go to state 86
    Iter_Stmt              go to state 87


state 56

   92 Compd_Stmt_No_New_Scope: '{' '}' .

    $default  reduce using rule 92 (Compd_Stmt_No_New_Scope)


state 57

    3 Pri_Expr: Var_Ident .

    $default  reduce using rule 3 (Pri_Expr)


state 58

    8 Pst_Expr: Pri_Expr .

    $default  reduce using rule 8 (Pst_Expr)


state 59

    9 Pst_Expr: Pst_Expr . '.' T_FieldSelection
   10         | Pst_Expr . T_Inc
   11         | Pst_Expr . T_Dec
   12 Unary_Expr: Pst_Expr .  [T_And, T_Or, T_LessEqual, T_GreaterEqual, T_Equal, T_NotEqual, T_Mul_Assign, T_Div_Assign, T_Add_Assign, T_Sub_Assign, ')', '+', '-', '*', '/', '<', '>', '=', ';', ':']

    T_Inc  shift, and go to state 102
    T_Dec  shift, and go to state 103
    '.'    shift, and go to state 104

    $default  reduce using rule 12 (Unary_Expr)


state 60

   18 Mult_Expr: Unary_Expr .  [T_And, T_Or, T_LessEqual, T_GreaterEqual, T_Equal, T_NotEqual, ')', '+', '-', '*', '/', '<', '>', ';', ':']
   43 Assign_Expr: Unary_Expr . Assign_Op Assign_Expr
   44 Assign_Op: . '='
   45          | . T_Mul_Assign
   46          | . T_Div_Assign
   47          | . T_Add_Assign
   48          | . T_Sub_Assign

    T_Mul_Assign  shift, and go to state 105
    T_Div_Assign  shift, and go to state 106
    T_Add_Assign  shift, and go to state 107
    T_Sub_Assign  shift, and go to state 108
    '='           shift, and go to state 109

    $default  reduce using rule 18 (Mult_Expr)

    Assign_Op  go to state 110


state 61

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   15           | Unary_Op . Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 111
    Unary_Op    go to state 61


state 62

   19 Mult_Expr: Mult_Expr . '*' Unary_Expr
   20          | Mult_Expr . '/' Unary_Expr
   21 Add_Expr: Mult_Expr .  [T_And, T_Or, T_LessEqual, T_GreaterEqual, T_Equal, T_NotEqual, ')', '+', '-', '<', '>', ';', ':']

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113

    $default  reduce using rule 21 (Add_Expr)


state 63

   22 Add_Expr: Add_Expr . '+' Mult_Expr
   23         | Add_Expr . '-' Mult_Expr
   24 Shift_Expr: Add_Expr .  [T_And, T_Or, T_LessEqual, T_GreaterEqual, T_Equal, T_NotEqual, ')', '<', '>', ';', ':']

    '+'  shift, and go to state 114
    '-'  shift, and go to state 115

    $default  reduce using rule 24 (Shift_Expr)


state 64

   25 Rel_Expr: Shift_Expr .

    $default  reduce using rule 25 (Rel_Expr)


state 65

   26 Rel_Expr: Rel_Expr . '<' Shift_Expr
   27         | Rel_Expr . '>' Shift_Expr
   28         | Rel_Expr . T_LessEqual Shift_Expr
   29         | Rel_Expr . T_GreaterEqual Shift_Expr
   30 Eq_Expr: Rel_Expr .  [T_And, T_Or, T_Equal, T_NotEqual, ')', ';', ':']

    T_LessEqual     shift, and go to state 116
    T_GreaterEqual  shift, and go to state 117
    '<'             shift, and go to state 118
    '>'             shift, and go to state 119

    $default  reduce using rule 30 (Eq_Expr)


state 66

   31 Eq_Expr: Eq_Expr . T_Equal Rel_Expr
   32        | Eq_Expr . T_NotEqual Rel_Expr
   33 And_Expr: Eq_Expr .  [T_And, T_Or, ')', ';', ':']

    T_Equal     shift, and go to state 120
    T_NotEqual  shift, and go to state 121

    $default  reduce using rule 33 (And_Expr)


state 67

   34 Xor_Expr: And_Expr .

    $default  reduce using rule 34 (Xor_Expr)


state 68

   35 Inc_Or_Expr: Xor_Expr .

    $default  reduce using rule 35 (Inc_Or_Expr)


state 69

   36 Log_And_Expr: Inc_Or_Expr .

    $default  reduce using rule 36 (Log_And_Expr)


state 70

   37 Log_And_Expr: Log_And_Expr . T_And Inc_Or_Expr
   38 Log_Xor_Expr: Log_And_Expr .  [T_Or, ')', ';', ':']

    T_And  shift, and go to state 122

    $default  reduce using rule 38 (Log_Xor_Expr)


state 71

   39 Log_Or_Expr: Log_Xor_Expr .

    $default  reduce using rule 39 (Log_Or_Expr)


state 72

   40 Log_Or_Expr: Log_Or_Expr . T_Or Log_Xor_Expr
   41 Cond_Expr: Log_Or_Expr .  [')', ';', ':']

    T_Or  shift, and go to state 123

    $default  reduce using rule 41 (Cond_Expr)


state 73

   42 Assign_Expr: Cond_Expr .

    $default  reduce using rule 42 (Assign_Expr)


state 74

   49 Expr: Assign_Expr .

    $default  reduce using rule 49 (Expr)


state 75

   97 Expr_Stmt: Expr . ';'

    ';'  shift, and go to state 124


state 76

   77 Decl_Stmt: Decl .

    $default  reduce using rule 77 (Decl_Stmt)


state 77

   50 Decl: Func_Proto . ';'

    ';'  shift, and go to state 26


state 78

   84 Simple_Stmt: Decl_Stmt .

    $default  reduce using rule 84 (Simple_Stmt)


state 79

   94 Stmt_List: Stmt .

    $default  reduce using rule 94 (Stmt_List)


state 80

   79 Stmt: Simple_Stmt .

    $default  reduce using rule 79 (Stmt)


state 81

   78 Stmt: Compd_Stmt_With_Scope .

    $default  reduce using rule 78 (Stmt)


state 82

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   78 Stmt: . Compd_Stmt_With_Scope
   79     | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   90 Compd_Stmt_With_Scope: . '{' '}'
   91                      | . '{' Stmt_List '}'
   93 Compd_Stmt_No_New_Scope: '{' Stmt_List . '}'
   95 Stmt_List: Stmt_List . Stmt
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 55
    '}'              shift, and go to state 125

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    '}'              [reduce using rule 103 (Switch_Stmt)]

    Var_Ident              go to state 57
    Pri_Expr               go to state 58
    Pst_Expr               go to state 59
    Unary_Expr             go to state 60
    Unary_Op               go to state 61
    Mult_Expr              go to state 62
    Add_Expr               go to state 63
    Shift_Expr             go to state 64
    Rel_Expr               go to state 65
    Eq_Expr                go to state 66
    And_Expr               go to state 67
    Xor_Expr               go to state 68
    Inc_Or_Expr            go to state 69
    Log_And_Expr           go to state 70
    Log_Xor_Expr           go to state 71
    Log_Or_Expr            go to state 72
    Cond_Expr              go to state 73
    Assign_Expr            go to state 74
    Expr                   go to state 75
    Decl                   go to state 76
    Func_Proto             go to state 77
    Func_Declr             go to state 14
    Func_Hdr_With_Param    go to state 15
    Func_Hdr               go to state 16
    Init_Decl_List         go to state 17
    Single_Decl            go to state 18
    Fully_Spec_Type        go to state 19
    Type_Spec              go to state 20
    Type_Spec_Nonarr       go to state 21
    Decl_Stmt              go to state 78
    Stmt                   go to state 126
    Simple_Stmt            go to state 80
    Compd_Stmt_With_Scope  go to state 81
    Expr_Stmt              go to state 83
    Select_Stmt            go to state 84
    Switch_Stmt            go to state 85
    Case_Label             go to state 86
    Iter_Stmt              go to state 87


state 83

   85 Simple_Stmt: Expr_Stmt .

    $default  reduce using rule 85 (Simple_Stmt)


state 84

   86 Simple_Stmt: Select_Stmt .

    $default  reduce using rule 86 (Simple_Stmt)


state 85

   87 Simple_Stmt: Switch_Stmt .

    $default  reduce using rule 87 (Simple_Stmt)


state 86

   88 Simple_Stmt: Case_Label .

    $default  reduce using rule 88 (Simple_Stmt)


state 87

   89 Simple_Stmt: Iter_Stmt .

    $default  reduce using rule 89 (Simple_Stmt)


state 88

   56 Func_Hdr_With_Param: Func_Hdr_With_Param ',' Param_Decl .

    $default  reduce using rule 56 (Func_Hdr_With_Param)


state 89

   59 Param_Declr: Type_Spec T_Identifier .

    $default  reduce using rule 59 (Param_Declr)


state 90

   57 Func_Hdr: Fully_Spec_Type Identifier '(' .

    $default  reduce using rule 57 (Func_Hdr)


state 91

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
  101 Cond: . Expr
  102     | . Type_Spec T_Identifier T_Equal Assign_Expr
  108 Iter_Stmt: T_While '(' . Cond ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident         go to state 57
    Pri_Expr          go to state 58
    Pst_Expr          go to state 59
    Unary_Expr        go to state 60
    Unary_Op          go to state 61
    Mult_Expr         go to state 62
    Add_Expr          go to state 63
    Shift_Expr        go to state 64
    Rel_Expr          go to state 65
    Eq_Expr           go to state 66
    And_Expr          go to state 67
    Xor_Expr          go to state 68
    Inc_Or_Expr       go to state 69
    Log_And_Expr      go to state 70
    Log_Xor_Expr      go to state 71
    Log_Or_Expr       go to state 72
    Cond_Expr         go to state 73
    Assign_Expr       go to state 74
    Expr              go to state 127
    Type_Spec         go to state 128
    Type_Spec_Nonarr  go to state 21
    Cond              go to state 129


state 92

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
  109 Iter_Stmt: T_For '(' . Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | T_For '(' . Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 74
    Expr          go to state 75
    Expr_Stmt     go to state 130


state 93

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   98 Select_Stmt: T_If '(' . Expr ')' Select_Rest_Stmt

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 74
    Expr          go to state 131


state 94

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
  104 Switch_Stmt: T_Switch '(' . Expr ')' '{' Switch_Stmt_List '}'

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 74
    Expr          go to state 132


state 95

  106 Case_Label: T_Case Expr . ':'

    ':'  shift, and go to state 133


state 96

  107 Case_Label: T_Default ':' .

    $default  reduce using rule 107 (Case_Label)


state 97

   13 Unary_Expr: T_Inc Unary_Expr .

    $default  reduce using rule 13 (Unary_Expr)


state 98

   14 Unary_Expr: T_Dec Unary_Expr .

    $default  reduce using rule 14 (Unary_Expr)


state 99

    7 Pri_Expr: '(' Expr . ')'

    ')'  shift, and go to state 134


state 100

   90 Compd_Stmt_With_Scope: '{' '}' .

    $default  reduce using rule 90 (Compd_Stmt_With_Scope)


state 101

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   78 Stmt: . Compd_Stmt_With_Scope
   79     | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   90 Compd_Stmt_With_Scope: . '{' '}'
   91                      | . '{' Stmt_List '}'
   91                      | '{' Stmt_List . '}'
   95 Stmt_List: Stmt_List . Stmt
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 55
    '}'              shift, and go to state 135

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    '}'              [reduce using rule 103 (Switch_Stmt)]

    Var_Ident              go to state 57
    Pri_Expr               go to state 58
    Pst_Expr               go to state 59
    Unary_Expr             go to state 60
    Unary_Op               go to state 61
    Mult_Expr              go to state 62
    Add_Expr               go to state 63
    Shift_Expr             go to state 64
    Rel_Expr               go to state 65
    Eq_Expr                go to state 66
    And_Expr               go to state 67
    Xor_Expr               go to state 68
    Inc_Or_Expr            go to state 69
    Log_And_Expr           go to state 70
    Log_Xor_Expr           go to state 71
    Log_Or_Expr            go to state 72
    Cond_Expr              go to state 73
    Assign_Expr            go to state 74
    Expr                   go to state 75
    Decl                   go to state 76
    Func_Proto             go to state 77
    Func_Declr             go to state 14
    Func_Hdr_With_Param    go to state 15
    Func_Hdr               go to state 16
    Init_Decl_List         go to state 17
    Single_Decl            go to state 18
    Fully_Spec_Type        go to state 19
    Type_Spec              go to state 20
    Type_Spec_Nonarr       go to state 21
    Decl_Stmt              go to state 78
    Stmt                   go to state 126
    Simple_Stmt            go to state 80
    Compd_Stmt_With_Scope  go to state 81
    Expr_Stmt              go to state 83
    Select_Stmt            go to state 84
    Switch_Stmt            go to state 85
    Case_Label             go to state 86
    Iter_Stmt              go to state 87


state 102

   10 Pst_Expr: Pst_Expr T_Inc .

    $default  reduce using rule 10 (Pst_Expr)


state 103

   11 Pst_Expr: Pst_Expr T_Dec .

    $default  reduce using rule 11 (Pst_Expr)


state 104

    9 Pst_Expr: Pst_Expr '.' . T_FieldSelection

    T_FieldSelection  shift, and go to state 136


state 105

   45 Assign_Op: T_Mul_Assign .

    $default  reduce using rule 45 (Assign_Op)


state 106

   46 Assign_Op: T_Div_Assign .

    $default  reduce using rule 46 (Assign_Op)


state 107

   47 Assign_Op: T_Add_Assign .

    $default  reduce using rule 47 (Assign_Op)


state 108

   48 Assign_Op: T_Sub_Assign .

    $default  reduce using rule 48 (Assign_Op)


state 109

   44 Assign_Op: '=' .

    $default  reduce using rule 44 (Assign_Op)


state 110

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   43            | Unary_Expr Assign_Op . Assign_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 137


state 111

   15 Unary_Expr: Unary_Op Unary_Expr .

    $default  reduce using rule 15 (Unary_Expr)


state 112

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   19 Mult_Expr: Mult_Expr '*' . Unary_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 138
    Unary_Op    go to state 61


state 113

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   20 Mult_Expr: Mult_Expr '/' . Unary_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 139
    Unary_Op    go to state 61


state 114

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   22 Add_Expr: Add_Expr '+' . Mult_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 141


state 115

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   23 Add_Expr: Add_Expr '-' . Mult_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 142


state 116

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   28 Rel_Expr: Rel_Expr T_LessEqual . Shift_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 62
    Add_Expr    go to state 63
    Shift_Expr  go to state 143


state 117

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   29 Rel_Expr: Rel_Expr T_GreaterEqual . Shift_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 62
    Add_Expr    go to state 63
    Shift_Expr  go to state 144


state 118

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   26 Rel_Expr: Rel_Expr '<' . Shift_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 62
    Add_Expr    go to state 63
    Shift_Expr  go to state 145


state 119

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   27 Rel_Expr: Rel_Expr '>' . Shift_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 62
    Add_Expr    go to state 63
    Shift_Expr  go to state 146


state 120

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   31 Eq_Expr: Eq_Expr T_Equal . Rel_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 62
    Add_Expr    go to state 63
    Shift_Expr  go to state 64
    Rel_Expr    go to state 147


state 121

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   32 Eq_Expr: Eq_Expr T_NotEqual . Rel_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident   go to state 57
    Pri_Expr    go to state 58
    Pst_Expr    go to state 59
    Unary_Expr  go to state 140
    Unary_Op    go to state 61
    Mult_Expr   go to state 62
    Add_Expr    go to state 63
    Shift_Expr  go to state 64
    Rel_Expr    go to state 148


state 122

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   37 Log_And_Expr: Log_And_Expr T_And . Inc_Or_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident    go to state 57
    Pri_Expr     go to state 58
    Pst_Expr     go to state 59
    Unary_Expr   go to state 140
    Unary_Op     go to state 61
    Mult_Expr    go to state 62
    Add_Expr     go to state 63
    Shift_Expr   go to state 64
    Rel_Expr     go to state 65
    Eq_Expr      go to state 66
    And_Expr     go to state 67
    Xor_Expr     go to state 68
    Inc_Or_Expr  go to state 149


state 123

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   40 Log_Or_Expr: Log_Or_Expr T_Or . Log_Xor_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 140
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 150


state 124

   97 Expr_Stmt: Expr ';' .

    $default  reduce using rule 97 (Expr_Stmt)


state 125

   93 Compd_Stmt_No_New_Scope: '{' Stmt_List '}' .

    $default  reduce using rule 93 (Compd_Stmt_No_New_Scope)


state 126

   95 Stmt_List: Stmt_List Stmt .

    $default  reduce using rule 95 (Stmt_List)


state 127

  101 Cond: Expr .

    $default  reduce using rule 101 (Cond)


state 128

  102 Cond: Type_Spec . T_Identifier T_Equal Assign_Expr

    T_Identifier  shift, and go to state 151


state 129

  108 Iter_Stmt: T_While '(' Cond . ')' Stmt_No_New_Scope

    ')'  shift, and go to state 152


state 130

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
  101 Cond: . Expr
  102     | . Type_Spec T_Identifier T_Equal Assign_Expr
  109 Iter_Stmt: T_For '(' Expr_Stmt . Cond ';' ')' Stmt_No_New_Scope
  110          | T_For '(' Expr_Stmt . Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident         go to state 57
    Pri_Expr          go to state 58
    Pst_Expr          go to state 59
    Unary_Expr        go to state 60
    Unary_Op          go to state 61
    Mult_Expr         go to state 62
    Add_Expr          go to state 63
    Shift_Expr        go to state 64
    Rel_Expr          go to state 65
    Eq_Expr           go to state 66
    And_Expr          go to state 67
    Xor_Expr          go to state 68
    Inc_Or_Expr       go to state 69
    Log_And_Expr      go to state 70
    Log_Xor_Expr      go to state 71
    Log_Or_Expr       go to state 72
    Cond_Expr         go to state 73
    Assign_Expr       go to state 74
    Expr              go to state 127
    Type_Spec         go to state 128
    Type_Spec_Nonarr  go to state 21
    Cond              go to state 153


state 131

   98 Select_Stmt: T_If '(' Expr . ')' Select_Rest_Stmt

    ')'  shift, and go to state 154


state 132

  104 Switch_Stmt: T_Switch '(' Expr . ')' '{' Switch_Stmt_List '}'

    ')'  shift, and go to state 155


state 133

  106 Case_Label: T_Case Expr ':' .

    $default  reduce using rule 106 (Case_Label)


state 134

    7 Pri_Expr: '(' Expr ')' .

    $default  reduce using rule 7 (Pri_Expr)


state 135

   91 Compd_Stmt_With_Scope: '{' Stmt_List '}' .

    $default  reduce using rule 91 (Compd_Stmt_With_Scope)


state 136

    9 Pst_Expr: Pst_Expr '.' T_FieldSelection .

    $default  reduce using rule 9 (Pst_Expr)


state 137

   43 Assign_Expr: Unary_Expr Assign_Op Assign_Expr .

    $default  reduce using rule 43 (Assign_Expr)


state 138

   19 Mult_Expr: Mult_Expr '*' Unary_Expr .

    $default  reduce using rule 19 (Mult_Expr)


state 139

   20 Mult_Expr: Mult_Expr '/' Unary_Expr .

    $default  reduce using rule 20 (Mult_Expr)


state 140

   18 Mult_Expr: Unary_Expr .

    $default  reduce using rule 18 (Mult_Expr)


state 141

   19 Mult_Expr: Mult_Expr . '*' Unary_Expr
   20          | Mult_Expr . '/' Unary_Expr
   22 Add_Expr: Add_Expr '+' Mult_Expr .  [T_And, T_Or, T_LessEqual, T_GreaterEqual, T_Equal, T_NotEqual, ')', '+', '-', '<', '>', ';', ':']

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113

    $default  reduce using rule 22 (Add_Expr)


state 142

   19 Mult_Expr: Mult_Expr . '*' Unary_Expr
   20          | Mult_Expr . '/' Unary_Expr
   23 Add_Expr: Add_Expr '-' Mult_Expr .  [T_And, T_Or, T_LessEqual, T_GreaterEqual, T_Equal, T_NotEqual, ')', '+', '-', '<', '>', ';', ':']

    '*'  shift, and go to state 112
    '/'  shift, and go to state 113

    $default  reduce using rule 23 (Add_Expr)


state 143

   28 Rel_Expr: Rel_Expr T_LessEqual Shift_Expr .

    $default  reduce using rule 28 (Rel_Expr)


state 144

   29 Rel_Expr: Rel_Expr T_GreaterEqual Shift_Expr .

    $default  reduce using rule 29 (Rel_Expr)


state 145

   26 Rel_Expr: Rel_Expr '<' Shift_Expr .

    $default  reduce using rule 26 (Rel_Expr)


state 146

   27 Rel_Expr: Rel_Expr '>' Shift_Expr .

    $default  reduce using rule 27 (Rel_Expr)


state 147

   26 Rel_Expr: Rel_Expr . '<' Shift_Expr
   27         | Rel_Expr . '>' Shift_Expr
   28         | Rel_Expr . T_LessEqual Shift_Expr
   29         | Rel_Expr . T_GreaterEqual Shift_Expr
   31 Eq_Expr: Eq_Expr T_Equal Rel_Expr .  [T_And, T_Or, T_Equal, T_NotEqual, ')', ';', ':']

    T_LessEqual     shift, and go to state 116
    T_GreaterEqual  shift, and go to state 117
    '<'             shift, and go to state 118
    '>'             shift, and go to state 119

    $default  reduce using rule 31 (Eq_Expr)


state 148

   26 Rel_Expr: Rel_Expr . '<' Shift_Expr
   27         | Rel_Expr . '>' Shift_Expr
   28         | Rel_Expr . T_LessEqual Shift_Expr
   29         | Rel_Expr . T_GreaterEqual Shift_Expr
   32 Eq_Expr: Eq_Expr T_NotEqual Rel_Expr .  [T_And, T_Or, T_Equal, T_NotEqual, ')', ';', ':']

    T_LessEqual     shift, and go to state 116
    T_GreaterEqual  shift, and go to state 117
    '<'             shift, and go to state 118
    '>'             shift, and go to state 119

    $default  reduce using rule 32 (Eq_Expr)


state 149

   37 Log_And_Expr: Log_And_Expr T_And Inc_Or_Expr .

    $default  reduce using rule 37 (Log_And_Expr)


state 150

   40 Log_Or_Expr: Log_Or_Expr T_Or Log_Xor_Expr .

    $default  reduce using rule 40 (Log_Or_Expr)


state 151

  102 Cond: Type_Spec T_Identifier . T_Equal Assign_Expr

    T_Equal  shift, and go to state 156


state 152

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   80 Stmt_No_New_Scope: . Compd_Stmt_No_New_Scope
   81                  | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   92 Compd_Stmt_No_New_Scope: . '{' '}'
   93                        | . '{' Stmt_List '}'
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_Else, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  108          | T_While '(' Cond ')' . Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 27

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    $default         reduce using rule 103 (Switch_Stmt)

    Var_Ident                go to state 57
    Pri_Expr                 go to state 58
    Pst_Expr                 go to state 59
    Unary_Expr               go to state 60
    Unary_Op                 go to state 61
    Mult_Expr                go to state 62
    Add_Expr                 go to state 63
    Shift_Expr               go to state 64
    Rel_Expr                 go to state 65
    Eq_Expr                  go to state 66
    And_Expr                 go to state 67
    Xor_Expr                 go to state 68
    Inc_Or_Expr              go to state 69
    Log_And_Expr             go to state 70
    Log_Xor_Expr             go to state 71
    Log_Or_Expr              go to state 72
    Cond_Expr                go to state 73
    Assign_Expr              go to state 74
    Expr                     go to state 75
    Decl                     go to state 76
    Func_Proto               go to state 77
    Func_Declr               go to state 14
    Func_Hdr_With_Param      go to state 15
    Func_Hdr                 go to state 16
    Init_Decl_List           go to state 17
    Single_Decl              go to state 18
    Fully_Spec_Type          go to state 19
    Type_Spec                go to state 20
    Type_Spec_Nonarr         go to state 21
    Decl_Stmt                go to state 78
    Stmt_No_New_Scope        go to state 157
    Simple_Stmt              go to state 158
    Compd_Stmt_No_New_Scope  go to state 159
    Expr_Stmt                go to state 83
    Select_Stmt              go to state 84
    Switch_Stmt              go to state 85
    Case_Label               go to state 86
    Iter_Stmt                go to state 87


state 153

  109 Iter_Stmt: T_For '(' Expr_Stmt Cond . ';' ')' Stmt_No_New_Scope
  110          | T_For '(' Expr_Stmt Cond . ';' Expr ')' Stmt_No_New_Scope

    ';'  shift, and go to state 160


state 154

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   82 Stmt_With_Scope: . Compd_Stmt_No_New_Scope
   83                | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   92 Compd_Stmt_No_New_Scope: . '{' '}'
   93                        | . '{' Stmt_List '}'
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
   98            | T_If '(' Expr ')' . Select_Rest_Stmt
   99 Select_Rest_Stmt: . Stmt_With_Scope T_Else Stmt_With_Scope
  100                 | . Stmt_With_Scope
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_Else, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 27

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    $default         reduce using rule 103 (Switch_Stmt)

    Var_Ident                go to state 57
    Pri_Expr                 go to state 58
    Pst_Expr                 go to state 59
    Unary_Expr               go to state 60
    Unary_Op                 go to state 61
    Mult_Expr                go to state 62
    Add_Expr                 go to state 63
    Shift_Expr               go to state 64
    Rel_Expr                 go to state 65
    Eq_Expr                  go to state 66
    And_Expr                 go to state 67
    Xor_Expr                 go to state 68
    Inc_Or_Expr              go to state 69
    Log_And_Expr             go to state 70
    Log_Xor_Expr             go to state 71
    Log_Or_Expr              go to state 72
    Cond_Expr                go to state 73
    Assign_Expr              go to state 74
    Expr                     go to state 75
    Decl                     go to state 76
    Func_Proto               go to state 77
    Func_Declr               go to state 14
    Func_Hdr_With_Param      go to state 15
    Func_Hdr                 go to state 16
    Init_Decl_List           go to state 17
    Single_Decl              go to state 18
    Fully_Spec_Type          go to state 19
    Type_Spec                go to state 20
    Type_Spec_Nonarr         go to state 21
    Decl_Stmt                go to state 78
    Stmt_With_Scope          go to state 161
    Simple_Stmt              go to state 162
    Compd_Stmt_No_New_Scope  go to state 163
    Expr_Stmt                go to state 83
    Select_Stmt              go to state 84
    Select_Rest_Stmt         go to state 164
    Switch_Stmt              go to state 85
    Case_Label               go to state 86
    Iter_Stmt                go to state 87


state 155

  104 Switch_Stmt: T_Switch '(' Expr ')' . '{' Switch_Stmt_List '}'

    '{'  shift, and go to state 165


state 156

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
  102 Cond: Type_Spec T_Identifier T_Equal . Assign_Expr

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 166


state 157

  108 Iter_Stmt: T_While '(' Cond ')' Stmt_No_New_Scope .

    $default  reduce using rule 108 (Iter_Stmt)


state 158

   81 Stmt_No_New_Scope: Simple_Stmt .

    $default  reduce using rule 81 (Stmt_No_New_Scope)


state 159

   80 Stmt_No_New_Scope: Compd_Stmt_No_New_Scope .

    $default  reduce using rule 80 (Stmt_No_New_Scope)


state 160

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
  109 Iter_Stmt: T_For '(' Expr_Stmt Cond ';' . ')' Stmt_No_New_Scope
  110          | T_For '(' Expr_Stmt Cond ';' . Expr ')' Stmt_No_New_Scope

    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    ')'              shift, and go to state 167
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53

    Var_Ident     go to state 57
    Pri_Expr      go to state 58
    Pst_Expr      go to state 59
    Unary_Expr    go to state 60
    Unary_Op      go to state 61
    Mult_Expr     go to state 62
    Add_Expr      go to state 63
    Shift_Expr    go to state 64
    Rel_Expr      go to state 65
    Eq_Expr       go to state 66
    And_Expr      go to state 67
    Xor_Expr      go to state 68
    Inc_Or_Expr   go to state 69
    Log_And_Expr  go to state 70
    Log_Xor_Expr  go to state 71
    Log_Or_Expr   go to state 72
    Cond_Expr     go to state 73
    Assign_Expr   go to state 74
    Expr          go to state 168


state 161

   99 Select_Rest_Stmt: Stmt_With_Scope . T_Else Stmt_With_Scope
  100                 | Stmt_With_Scope .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_Else, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']

    T_Else  shift, and go to state 169

    T_Else    [reduce using rule 100 (Select_Rest_Stmt)]
    $default  reduce using rule 100 (Select_Rest_Stmt)


state 162

   83 Stmt_With_Scope: Simple_Stmt .

    $default  reduce using rule 83 (Stmt_With_Scope)


state 163

   82 Stmt_With_Scope: Compd_Stmt_No_New_Scope .

    $default  reduce using rule 82 (Stmt_With_Scope)


state 164

   98 Select_Stmt: T_If '(' Expr ')' Select_Rest_Stmt .

    $default  reduce using rule 98 (Select_Stmt)


state 165

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   78 Stmt: . Compd_Stmt_With_Scope
   79     | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   90 Compd_Stmt_With_Scope: . '{' '}'
   91                      | . '{' Stmt_List '}'
   94 Stmt_List: . Stmt
   95          | . Stmt_List Stmt
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  104            | T_Switch '(' Expr ')' '{' . Switch_Stmt_List '}'
  105 Switch_Stmt_List: . Stmt_List
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 55

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    $default         reduce using rule 103 (Switch_Stmt)

    Var_Ident              go to state 57
    Pri_Expr               go to state 58
    Pst_Expr               go to state 59
    Unary_Expr             go to state 60
    Unary_Op               go to state 61
    Mult_Expr              go to state 62
    Add_Expr               go to state 63
    Shift_Expr             go to state 64
    Rel_Expr               go to state 65
    Eq_Expr                go to state 66
    And_Expr               go to state 67
    Xor_Expr               go to state 68
    Inc_Or_Expr            go to state 69
    Log_And_Expr           go to state 70
    Log_Xor_Expr           go to state 71
    Log_Or_Expr            go to state 72
    Cond_Expr              go to state 73
    Assign_Expr            go to state 74
    Expr                   go to state 75
    Decl                   go to state 76
    Func_Proto             go to state 77
    Func_Declr             go to state 14
    Func_Hdr_With_Param    go to state 15
    Func_Hdr               go to state 16
    Init_Decl_List         go to state 17
    Single_Decl            go to state 18
    Fully_Spec_Type        go to state 19
    Type_Spec              go to state 20
    Type_Spec_Nonarr       go to state 21
    Decl_Stmt              go to state 78
    Stmt                   go to state 79
    Simple_Stmt            go to state 80
    Compd_Stmt_With_Scope  go to state 81
    Stmt_List              go to state 170
    Expr_Stmt              go to state 83
    Select_Stmt            go to state 84
    Switch_Stmt            go to state 85
    Switch_Stmt_List       go to state 171
    Case_Label             go to state 86
    Iter_Stmt              go to state 87


state 166

  102 Cond: Type_Spec T_Identifier T_Equal Assign_Expr .

    $default  reduce using rule 102 (Cond)


state 167

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   80 Stmt_No_New_Scope: . Compd_Stmt_No_New_Scope
   81                  | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   92 Compd_Stmt_No_New_Scope: . '{' '}'
   93                        | . '{' Stmt_List '}'
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_Else, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  109          | T_For '(' Expr_Stmt Cond ';' ')' . Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 27

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    $default         reduce using rule 103 (Switch_Stmt)

    Var_Ident                go to state 57
    Pri_Expr                 go to state 58
    Pst_Expr                 go to state 59
    Unary_Expr               go to state 60
    Unary_Op                 go to state 61
    Mult_Expr                go to state 62
    Add_Expr                 go to state 63
    Shift_Expr               go to state 64
    Rel_Expr                 go to state 65
    Eq_Expr                  go to state 66
    And_Expr                 go to state 67
    Xor_Expr                 go to state 68
    Inc_Or_Expr              go to state 69
    Log_And_Expr             go to state 70
    Log_Xor_Expr             go to state 71
    Log_Or_Expr              go to state 72
    Cond_Expr                go to state 73
    Assign_Expr              go to state 74
    Expr                     go to state 75
    Decl                     go to state 76
    Func_Proto               go to state 77
    Func_Declr               go to state 14
    Func_Hdr_With_Param      go to state 15
    Func_Hdr                 go to state 16
    Init_Decl_List           go to state 17
    Single_Decl              go to state 18
    Fully_Spec_Type          go to state 19
    Type_Spec                go to state 20
    Type_Spec_Nonarr         go to state 21
    Decl_Stmt                go to state 78
    Stmt_No_New_Scope        go to state 172
    Simple_Stmt              go to state 158
    Compd_Stmt_No_New_Scope  go to state 159
    Expr_Stmt                go to state 83
    Select_Stmt              go to state 84
    Switch_Stmt              go to state 85
    Case_Label               go to state 86
    Iter_Stmt                go to state 87


state 168

  110 Iter_Stmt: T_For '(' Expr_Stmt Cond ';' Expr . ')' Stmt_No_New_Scope

    ')'  shift, and go to state 173


state 169

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   82 Stmt_With_Scope: . Compd_Stmt_No_New_Scope
   83                | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   92 Compd_Stmt_No_New_Scope: . '{' '}'
   93                        | . '{' Stmt_List '}'
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
   99 Select_Rest_Stmt: Stmt_With_Scope T_Else . Stmt_With_Scope
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_Else, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 27

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    $default         reduce using rule 103 (Switch_Stmt)

    Var_Ident                go to state 57
    Pri_Expr                 go to state 58
    Pst_Expr                 go to state 59
    Unary_Expr               go to state 60
    Unary_Op                 go to state 61
    Mult_Expr                go to state 62
    Add_Expr                 go to state 63
    Shift_Expr               go to state 64
    Rel_Expr                 go to state 65
    Eq_Expr                  go to state 66
    And_Expr                 go to state 67
    Xor_Expr                 go to state 68
    Inc_Or_Expr              go to state 69
    Log_And_Expr             go to state 70
    Log_Xor_Expr             go to state 71
    Log_Or_Expr              go to state 72
    Cond_Expr                go to state 73
    Assign_Expr              go to state 74
    Expr                     go to state 75
    Decl                     go to state 76
    Func_Proto               go to state 77
    Func_Declr               go to state 14
    Func_Hdr_With_Param      go to state 15
    Func_Hdr                 go to state 16
    Init_Decl_List           go to state 17
    Single_Decl              go to state 18
    Fully_Spec_Type          go to state 19
    Type_Spec                go to state 20
    Type_Spec_Nonarr         go to state 21
    Decl_Stmt                go to state 78
    Stmt_With_Scope          go to state 174
    Simple_Stmt              go to state 162
    Compd_Stmt_No_New_Scope  go to state 163
    Expr_Stmt                go to state 83
    Select_Stmt              go to state 84
    Switch_Stmt              go to state 85
    Case_Label               go to state 86
    Iter_Stmt                go to state 87


state 170

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   78 Stmt: . Compd_Stmt_With_Scope
   79     | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   90 Compd_Stmt_With_Scope: . '{' '}'
   91                      | . '{' Stmt_List '}'
   95 Stmt_List: Stmt_List . Stmt
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  105 Switch_Stmt_List: Stmt_List .  ['}']
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 55

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    '}'              reduce using rule 103 (Switch_Stmt)
    '}'              [reduce using rule 105 (Switch_Stmt_List)]
    $default         reduce using rule 103 (Switch_Stmt)

    Var_Ident              go to state 57
    Pri_Expr               go to state 58
    Pst_Expr               go to state 59
    Unary_Expr             go to state 60
    Unary_Op               go to state 61
    Mult_Expr              go to state 62
    Add_Expr               go to state 63
    Shift_Expr             go to state 64
    Rel_Expr               go to state 65
    Eq_Expr                go to state 66
    And_Expr               go to state 67
    Xor_Expr               go to state 68
    Inc_Or_Expr            go to state 69
    Log_And_Expr           go to state 70
    Log_Xor_Expr           go to state 71
    Log_Or_Expr            go to state 72
    Cond_Expr              go to state 73
    Assign_Expr            go to state 74
    Expr                   go to state 75
    Decl                   go to state 76
    Func_Proto             go to state 77
    Func_Declr             go to state 14
    Func_Hdr_With_Param    go to state 15
    Func_Hdr               go to state 16
    Init_Decl_List         go to state 17
    Single_Decl            go to state 18
    Fully_Spec_Type        go to state 19
    Type_Spec              go to state 20
    Type_Spec_Nonarr       go to state 21
    Decl_Stmt              go to state 78
    Stmt                   go to state 126
    Simple_Stmt            go to state 80
    Compd_Stmt_With_Scope  go to state 81
    Expr_Stmt              go to state 83
    Select_Stmt            go to state 84
    Switch_Stmt            go to state 85
    Case_Label             go to state 86
    Iter_Stmt              go to state 87


state 171

  104 Switch_Stmt: T_Switch '(' Expr ')' '{' Switch_Stmt_List . '}'

    '}'  shift, and go to state 175


state 172

  109 Iter_Stmt: T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope .

    $default  reduce using rule 109 (Iter_Stmt)


state 173

    2 Var_Ident: . T_Identifier
    3 Pri_Expr: . Var_Ident
    4         | . T_IntConstant
    5         | . T_FloatConstant
    6         | . T_BoolConstant
    7         | . '(' Expr ')'
    8 Pst_Expr: . Pri_Expr
    9         | . Pst_Expr '.' T_FieldSelection
   10         | . Pst_Expr T_Inc
   11         | . Pst_Expr T_Dec
   12 Unary_Expr: . Pst_Expr
   13           | . T_Inc Unary_Expr
   14           | . T_Dec Unary_Expr
   15           | . Unary_Op Unary_Expr
   16 Unary_Op: . '+'
   17         | . '-'
   18 Mult_Expr: . Unary_Expr
   19          | . Mult_Expr '*' Unary_Expr
   20          | . Mult_Expr '/' Unary_Expr
   21 Add_Expr: . Mult_Expr
   22         | . Add_Expr '+' Mult_Expr
   23         | . Add_Expr '-' Mult_Expr
   24 Shift_Expr: . Add_Expr
   25 Rel_Expr: . Shift_Expr
   26         | . Rel_Expr '<' Shift_Expr
   27         | . Rel_Expr '>' Shift_Expr
   28         | . Rel_Expr T_LessEqual Shift_Expr
   29         | . Rel_Expr T_GreaterEqual Shift_Expr
   30 Eq_Expr: . Rel_Expr
   31        | . Eq_Expr T_Equal Rel_Expr
   32        | . Eq_Expr T_NotEqual Rel_Expr
   33 And_Expr: . Eq_Expr
   34 Xor_Expr: . And_Expr
   35 Inc_Or_Expr: . Xor_Expr
   36 Log_And_Expr: . Inc_Or_Expr
   37             | . Log_And_Expr T_And Inc_Or_Expr
   38 Log_Xor_Expr: . Log_And_Expr
   39 Log_Or_Expr: . Log_Xor_Expr
   40            | . Log_Or_Expr T_Or Log_Xor_Expr
   41 Cond_Expr: . Log_Or_Expr
   42 Assign_Expr: . Cond_Expr
   43            | . Unary_Expr Assign_Op Assign_Expr
   49 Expr: . Assign_Expr
   50 Decl: . Func_Proto ';'
   51     | . Init_Decl_List ';'
   52 Func_Proto: . Func_Declr ')'
   53 Func_Declr: . Func_Hdr
   54           | . Func_Hdr_With_Param
   55 Func_Hdr_With_Param: . Func_Hdr Param_Decl
   56                    | . Func_Hdr_With_Param ',' Param_Decl
   57 Func_Hdr: . Fully_Spec_Type Identifier '('
   63 Init_Decl_List: . Single_Decl
   64 Single_Decl: . Fully_Spec_Type T_Identifier
   65 Fully_Spec_Type: . Type_Spec
   66 Type_Spec: . Type_Spec_Nonarr
   67 Type_Spec_Nonarr: . T_Void
   68                 | . T_Float
   69                 | . T_Int
   70                 | . T_Bool
   71                 | . T_Vec2
   72                 | . T_Vec3
   73                 | . T_Vec4
   74                 | . T_Mat2
   75                 | . T_Mat3
   76                 | . T_Mat4
   77 Decl_Stmt: . Decl
   80 Stmt_No_New_Scope: . Compd_Stmt_No_New_Scope
   81                  | . Simple_Stmt
   84 Simple_Stmt: . Decl_Stmt
   85            | . Expr_Stmt
   86            | . Select_Stmt
   87            | . Switch_Stmt
   88            | . Case_Label
   89            | . Iter_Stmt
   92 Compd_Stmt_No_New_Scope: . '{' '}'
   93                        | . '{' Stmt_List '}'
   96 Expr_Stmt: . ';'
   97          | . Expr ';'
   98 Select_Stmt: . T_If '(' Expr ')' Select_Rest_Stmt
  103 Switch_Stmt: .  [T_Void, T_Bool, T_Float, T_Int, T_Vec2, T_Vec3, T_Vec4, T_Mat2, T_Mat3, T_Mat4, T_While, T_Else, T_For, T_If, T_Switch, T_Case, T_Default, T_IntConstant, T_FloatConstant, T_BoolConstant, T_Inc, T_Dec, T_Identifier, '(', '+', '-', ';', '{', '}']
  104            | . T_Switch '(' Expr ')' '{' Switch_Stmt_List '}'
  106 Case_Label: . T_Case Expr ':'
  107           | . T_Default ':'
  108 Iter_Stmt: . T_While '(' Cond ')' Stmt_No_New_Scope
  109          | . T_For '(' Expr_Stmt Cond ';' ')' Stmt_No_New_Scope
  110          | . T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope
  110          | T_For '(' Expr_Stmt Cond ';' Expr ')' . Stmt_No_New_Scope

    T_Void           shift, and go to state 1
    T_Bool           shift, and go to state 2
    T_Float          shift, and go to state 3
    T_Int            shift, and go to state 4
    T_Vec2           shift, and go to state 5
    T_Vec3           shift, and go to state 6
    T_Vec4           shift, and go to state 7
    T_Mat2           shift, and go to state 8
    T_Mat3           shift, and go to state 9
    T_Mat4           shift, and go to state 10
    T_While          shift, and go to state 39
    T_For            shift, and go to state 40
    T_If             shift, and go to state 41
    T_Switch         shift, and go to state 42
    T_Case           shift, and go to state 43
    T_Default        shift, and go to state 44
    T_IntConstant    shift, and go to state 45
    T_FloatConstant  shift, and go to state 46
    T_BoolConstant   shift, and go to state 47
    T_Inc            shift, and go to state 48
    T_Dec            shift, and go to state 49
    T_Identifier     shift, and go to state 50
    '('              shift, and go to state 51
    '+'              shift, and go to state 52
    '-'              shift, and go to state 53
    ';'              shift, and go to state 54
    '{'              shift, and go to state 27

    T_Void           [reduce using rule 103 (Switch_Stmt)]
    T_Bool           [reduce using rule 103 (Switch_Stmt)]
    T_Float          [reduce using rule 103 (Switch_Stmt)]
    T_Int            [reduce using rule 103 (Switch_Stmt)]
    T_Vec2           [reduce using rule 103 (Switch_Stmt)]
    T_Vec3           [reduce using rule 103 (Switch_Stmt)]
    T_Vec4           [reduce using rule 103 (Switch_Stmt)]
    T_Mat2           [reduce using rule 103 (Switch_Stmt)]
    T_Mat3           [reduce using rule 103 (Switch_Stmt)]
    T_Mat4           [reduce using rule 103 (Switch_Stmt)]
    T_While          [reduce using rule 103 (Switch_Stmt)]
    T_For            [reduce using rule 103 (Switch_Stmt)]
    T_If             [reduce using rule 103 (Switch_Stmt)]
    T_Switch         [reduce using rule 103 (Switch_Stmt)]
    T_Case           [reduce using rule 103 (Switch_Stmt)]
    T_Default        [reduce using rule 103 (Switch_Stmt)]
    T_IntConstant    [reduce using rule 103 (Switch_Stmt)]
    T_FloatConstant  [reduce using rule 103 (Switch_Stmt)]
    T_BoolConstant   [reduce using rule 103 (Switch_Stmt)]
    T_Inc            [reduce using rule 103 (Switch_Stmt)]
    T_Dec            [reduce using rule 103 (Switch_Stmt)]
    T_Identifier     [reduce using rule 103 (Switch_Stmt)]
    '('              [reduce using rule 103 (Switch_Stmt)]
    '+'              [reduce using rule 103 (Switch_Stmt)]
    '-'              [reduce using rule 103 (Switch_Stmt)]
    ';'              [reduce using rule 103 (Switch_Stmt)]
    '{'              [reduce using rule 103 (Switch_Stmt)]
    $default         reduce using rule 103 (Switch_Stmt)

    Var_Ident                go to state 57
    Pri_Expr                 go to state 58
    Pst_Expr                 go to state 59
    Unary_Expr               go to state 60
    Unary_Op                 go to state 61
    Mult_Expr                go to state 62
    Add_Expr                 go to state 63
    Shift_Expr               go to state 64
    Rel_Expr                 go to state 65
    Eq_Expr                  go to state 66
    And_Expr                 go to state 67
    Xor_Expr                 go to state 68
    Inc_Or_Expr              go to state 69
    Log_And_Expr             go to state 70
    Log_Xor_Expr             go to state 71
    Log_Or_Expr              go to state 72
    Cond_Expr                go to state 73
    Assign_Expr              go to state 74
    Expr                     go to state 75
    Decl                     go to state 76
    Func_Proto               go to state 77
    Func_Declr               go to state 14
    Func_Hdr_With_Param      go to state 15
    Func_Hdr                 go to state 16
    Init_Decl_List           go to state 17
    Single_Decl              go to state 18
    Fully_Spec_Type          go to state 19
    Type_Spec                go to state 20
    Type_Spec_Nonarr         go to state 21
    Decl_Stmt                go to state 78
    Stmt_No_New_Scope        go to state 176
    Simple_Stmt              go to state 158
    Compd_Stmt_No_New_Scope  go to state 159
    Expr_Stmt                go to state 83
    Select_Stmt              go to state 84
    Switch_Stmt              go to state 85
    Case_Label               go to state 86
    Iter_Stmt                go to state 87


state 174

   99 Select_Rest_Stmt: Stmt_With_Scope T_Else Stmt_With_Scope .

    $default  reduce using rule 99 (Select_Rest_Stmt)


state 175

  104 Switch_Stmt: T_Switch '(' Expr ')' '{' Switch_Stmt_List '}' .

    $default  reduce using rule 104 (Switch_Stmt)


state 176

  110 Iter_Stmt: T_For '(' Expr_Stmt Cond ';' Expr ')' Stmt_No_New_Scope .

    $default  reduce using rule 110 (Iter_Stmt)
